security:
    encoders:
        # Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User:
            algorithm: sha512

    role_hierarchy:
        ROLE_MEMBER: ROLE_USER
        ROLE_ADMIN: ROLE_MEMBER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        # indique quel entit√© on utilise pour l'authentification et le champ qui sert d'identifiant
        main:
            entity:
                class: App\Entity\User
                property: username
        
    firewalls:
        # protection/parametres des routes
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern: ^/api/register
            stateless: true
            security: false    
            anonymous: true    

        refresh:
            pattern: ^/api/token/refresh
            stateless: true
            anonymous: true

        api:
            pattern: ^/api
            stateless: true
            provider: main
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/api/events, roles: ROLE_MEMBER }
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users, roles: ROLE_USER }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
